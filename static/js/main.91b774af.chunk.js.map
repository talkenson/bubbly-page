{"version":3,"sources":["panels/Home.js","components/msgbox.js","components/scroller.js","panels/Persik.js","panels/Login.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","setActiveModal","className","title","description","data","first_name","last_name","uname","size","level","onClick","data-to","motd","MsgBox","platform","props","state","isVisible","author","text","time","ts","owner","align","color","this","includes","document","body","attributes","scheme","value","setState","style","opacity","moment","format","React","Component","Scroller","console","log","scroller","scrollToBottom","osName","Chat","msgList","err","last_msg","contextOpened","mode","textInput","createRef","pollBack","toggleContext","bind","select","e","currentTarget","dataset","requestAnimationFrame","focusTextInput","refreshMsgs","interval","setInterval","checkScroll","clearInterval","scrollHeight","window","innerHeight","pageYOffset","scroll","msgArr","length","axios","post","token","then","res","status","total","processMsgs","response","desc","current","trim","code","focus","left","IOS","aside","opened","onClose","before","data-mode","map","index","key","display","placeholder","getRef","onKeyDown","sendMsg","top","Login","logDataName","logDataPass","tryLogin","errMsg","mutex","timezone","App","useState","activePanel","setActivePanel","activeModalS","setUser","activeChat","loginErrMsg","setLEM","popout","setPopout","useEffect","connect","subscribe","detail","type","schemeAttribute","createAttribute","setNamedItem","a","async","user","location","href","sendPromise","get","fetchData","to","modal","activeModal","header","send","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.91b774af.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\n//import Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport './Home.css';\nimport preval from 'preval.macro';\n\n\n/*\nid: 111612348\nfirst_name: \"Виталий\"\nlast_name: \"Кот\"\nsex: 2\ncity: {id: 99, title: \"Новосибирск\"}\ncountry: {id: 1, title: \"Россия\"}\nphoto_100: \"https://sun9-18.userapi.com/c844416/v844416349/1c3076/uKkyiwCBRSE.jpg?ava=1\"\nphoto_max_orig: \"https://sun9-45.userapi.com/c844416/v844416349/1c3072/M8g-RdsImqI.jpg?ava=1\"\nbdate: \"28.3.1996\"\nphoto_200: \"https://sun9-21.userapi.com/c844416/v844416349/1c3075/7jf2qRe2UaE.jpg?ava=1\"\ntimezone: 7\n */\n\n/*<Div>\n    <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n        Show me the Persik, please\n    </Button>\n</Div>\n\nbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n*/\n\nconst Home = ({ id, go, fetchedUser, setActiveModal }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader className=\"Panel\">Bubbly</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"Вы вошли как\">\n\t\t\t<Cell\n\n\t\t\t\tdescription={fetchedUser.data ? `${fetchedUser.first_name} ${fetchedUser.last_name}` : \"Мы загружаем ваши данные...\"}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.data ? fetchedUser.data.uname : \"Загрузка...\"}`}\n\t\t\t</Cell>\n\n\t\t</Group>}\n\n\t\t<Group title=\"Чаты\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"chat\">\n\t\t\t\t\t<Cell\n\t\t\t\t\t\tdescription=\"Нажмите, чтобы присоединиться\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{`${fetchedUser && fetchedUser.data ? fetchedUser.data.motd  : \"Загрузка...\"}`}\n\t\t\t\t\t</Cell>\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\n\t\t<Group title=\"Диалоги\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" >\n\t\t\t\t\t<Cell\n\t\t\t\t\t\tdescription=\"Последнее сообщение?\"\n\t\t\t\t\t>\n\t\t\t\t\t\tСкоро...\n\t\t\t\t\t</Cell>\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\n\t\t<Group title=\"Версия приложения\">\n\t\t\t<Div>\n\t\t\t\t0.1.22.0212 (Build Date: {preval`module.exports = new Date().toLocaleString();`}.)\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport * as moment from 'moment';\r\n\r\nimport PanelSpinner from \"@vkontakte/vkui/dist/components/PanelSpinner/PanelSpinner\";\r\nimport './msgbox.css';\r\nconst osName = platform();\r\n\r\nclass MsgBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isVisible: false,\r\n            id: props.data.id,\r\n            author: props.data.author,\r\n            text: props.data.text,\r\n            time: props.data.ts,\r\n            owner: props.owner\r\n        };\r\n        this.align = 'left';\r\n        this.color = 'dark';\r\n    }\r\n\r\n    componentDidMount() {\r\n        //console.log(this.props);\r\n        //console.log(this.state);\r\n        this.align = (this.state.author === this.state.owner) ? 'right' : 'left';\r\n        this.color = (['space_gray', 'dark_client'].includes(document.body.attributes.scheme.value)) ? 'dark' : 'light';\r\n        this.setState({isVisible: true});\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className='row' style={{opacity: (this.state.isVisible) ? '1' : '0'}}>\r\n                <div className={`block ${this.align} ${this.color}`}>\r\n                    <span className='author'>{this.state.author}</span><div className='text'>{this.state.text}</div><span className='time'>{moment.unix(this.state.time).format('HH:mm')}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MsgBox;\r\n","import React from 'react';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\n\r\nimport PanelSpinner from \"@vkontakte/vkui/dist/components/PanelSpinner/PanelSpinner\";\r\nimport './scroller.css';\r\nconst osName = platform();\r\n\r\nclass Scroller extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className='circle' onClick={() => {this.props.scroller.scrollToBottom(); /*this.props.onClick();*/}}>\r\n                <div className='arrow'><Icon28ChevronBack /></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Scroller;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport InfoRow from '@vkontakte/vkui/dist/components/InfoRow/InfoRow';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\nimport Icon24Users from '@vkontakte/icons/dist/24/users';\nimport Icon24Settings from '@vkontakte/icons/dist/24/settings';\nimport FormLayoutGroup from \"@vkontakte/vkui/dist/components/FormLayoutGroup/FormLayoutGroup\";\nimport Input from \"@vkontakte/vkui/dist/components/Input/Input\";\nimport Textarea from \"@vkontakte/vkui/dist/components/Textarea/Textarea\";\nimport FormLayout from \"@vkontakte/vkui/dist/components/FormLayout/FormLayout\";\nimport PanelSpinner from \"@vkontakte/vkui/dist/components/PanelSpinner/PanelSpinner\";\nimport HeaderContext from \"@vkontakte/vkui/dist/components/HeaderContext/HeaderContext\";\nimport PanelHeaderContent from \"@vkontakte/vkui/dist/components/PanelHeaderContent/PanelHeaderContent\";\nimport List from \"@vkontakte/vkui/dist/components/List/List\";\n\n\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport {animateScroll as scroll} from 'react-scroll'\nimport './Persik.css';\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\nimport Div from \"@vkontakte/vkui/dist/components/Div/Div\";\nimport MsgBox from '../components/msgbox';\nimport Scroller from '../components/scroller';\nimport axios from \"axios\";\n\nconst osName = platform();\n\nclass Chat extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// создадим реф в поле `textInput` для хранения DOM-элемента\n\n\t\tthis.state = {\n\t\t\tmsgList: [],\n\t\t\terr: null,\n\t\t\tfetchedUser: props.fetchedUser,\n\t\t\tlast_msg: 0,\n\t\t\tscroller: false,\n\t\t\tcontextOpened: false,\n\t\t\tmode: 'all'\n\t\t};\n\n\t\tthis.textInput = React.createRef();\n\t\tthis.pollBack = true;\n\t\tthis.toggleContext = this.toggleContext.bind(this);\n\t\tthis.select = this.select.bind(this);\n\n\t\t//const [msgList, setMsgList] = useState([]);\n\n\t}\n\n\ttoggleContext () {\n\t\tthis.setState({ contextOpened: !this.state.contextOpened });\n\t}\n\n\tselect (e) {\n\t\tconst mode = e.currentTarget.dataset.mode;\n\t\tthis.setState({ mode });\n\t\trequestAnimationFrame(this.toggleContext);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.focusTextInput();\n\t\tthis.refreshMsgs();\n\t\tconsole.log(this.state);\n\t\tthis.interval = setInterval(() => {this.checkScroll();}, 1000);\n\t}\n\n\tcomponentDidUpdate() {\n\t\t//console.log(this.state.msgList);\n\t\t//scroll.scrollToBottom();\n\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.pollBack = false;\n\t\tclearInterval(this.interval);\n\t}\n\n\tcheckScroll() {\n\t\tif (document.body.scrollHeight - window.innerHeight - window.pageYOffset < 200) {\n\t\t\tscroll.scrollToBottom();\n\t\t\tthis.setState({scroller: false});\n\t\t} else {\n\t\t\tthis.setState({scroller: true});\n\t\t}\n\t}\n\n\tprocessMsgs(msgArr) {\n\t\tif (msgArr.length === 0) return;\n\t\tthis.setState({msgList: [...this.state.msgList, ...msgArr]});\n\t\tthis.state.last_msg = this.state.msgList[this.state.msgList.length-1].id;\n\t\t//window.scrollTop = window.scrollHeight;\n\t}\n\n\tasync refreshMsgs() {\n\t\t//console.log('Trying to fetch history with TOKEN[' + this.props.fetchedUser.data.token + ']');\n\t\twhile (this.pollBack) {\n\t\t\tawait axios.post(\"https://das.ict.nsc.ru:12000/updates\", {\n\t\t\t\t'token': this.props.fetchedUser.data.token,\n\t\t\t\t'last_msg': this.state.last_msg\n\t\t\t})\n\t\t\t\t.then((res) => {\n\t\t\t\t\t//console.log(res);\n\t\t\t\t\tif (res.data.status == 'ok'){\n\t\t\t\t\t\tif (res.data.total > 0) {\n\t\t\t\t\t\t\tthis.processMsgs(res.data.response);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*\n\t\t\t\t\t\tstatus: \"ok\"\nresponse: [{message: \"tester returned to chat!\", uname: \"[SERVER]\", id: 17}]\ntotal: 1\n*/\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log(res.data.desc);\n\t\t\t\t\t\t//setActivePanel('login');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t}\n\tsendMsg() {\n\t\t//console.log(this.textInput.current.value);\n\t\t//console.log('Sending message with TOKEN[' + this.props.fetchedUser.data.token + ']');\n\n\t\tthis.focusTextInput();\n\t\tif ( this.textInput.current.value.trim().length === 0 ) {\n\t\t\tthis.textInput.current.value = '';\n\t\t\treturn false;\n\t\t}\n\n\t\taxios.post(\"https://das.ict.nsc.ru:12000/send\", {\n\t\t\t'token': this.props.fetchedUser.data.token,\n\t\t\t'message': this.textInput.current.value\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\t//console.log(res);\n\t\t\t\tif (res.data.status == 'ok'){\n\t\t\t\t\t// OK!\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(res.data.desc);\n\t\t\t\t\tswitch (res.data.code) {\n\t\t\t\t\t\tcase '402':\n\t\t\t\t\t\t\tthis.setState({err: 'Ваша сессия недействительна'});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '501':\n\t\t\t\t\t\t\tthis.setState({err: 'Не предоставлено данных'});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthis.setState({err: 'Неизвестная ошибка'});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t// Clear input\n\t\t//console.log(this.textInput.current);\n\t\tthis.textInput.current.value = '';\n\t};\n\n\tfocusTextInput() {\n\t\t// Установим фокус на текстовое поле с помощью чистого DOM API\n\t\t// Примечание: обращаемся к \"current\", чтобы получить DOM-узел\n\t\tthis.textInput.current.focus();\n\t}\n\n\trender() {\n\n\n\t\treturn (\n\t\t\t<Panel id={this.props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\tleft={\n\t\t\t\t<HeaderButton onClick={this.props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t\t</HeaderButton>}\n\t\t\t\t>\n\t\t\t\t\t<PanelHeaderContent aside={<Icon16Dropdown />} onClick={this.toggleContext}>\n\t\t\t\t\t\tЧат\n\t\t\t\t\t</PanelHeaderContent>\n\t\t\t\t</PanelHeader>\n\t\t\t\t<HeaderContext opened={this.state.contextOpened} onClose={this.toggleContext}>\n\t\t\t\t\t<List>\n\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\tbefore={<Icon24Users />}\n\t\t\t\t\t\t\t//asideContent={this.state.mode === 'users' ? <Icon24Done fill=\"var(--accent)\" /> : null}\n\t\t\t\t\t\t\tonClick={this.select}\n\t\t\t\t\t\t\tdata-mode=\"users\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tПользователи\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\tbefore={<Icon24Settings />}\n\t\t\t\t\t\t\t//asideContent={this.state.mode === 'settings' ? <Icon24Done fill=\"var(--accent)\" /> : null}\n\t\t\t\t\t\t\tonClick={this.select}\n\t\t\t\t\t\t\tdata-mode=\"settings\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tНастройки\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t</List>\n\t\t\t\t</HeaderContext>\n\n\t\t\t\t{/*History*/}\n\n\n{\n\t/*<InfoRow key={value.id} className='msgBox' id={`msg-id${value.id}`} title={`${value.uname}`}>\n\t\t\t\t\t\t\t\t\t{value.message}\n\t\t\t\t\t\t\t\t</InfoRow>*/\n\t/*\n\t\t\t\t<Group className='historyGroup'>\n\t\t\t\t\t<Div>\n\t\t\t\t\t\t{(this.state.msgList == 0) ? <PanelSpinner /> :\n\t\t\t\t\t\t\tthis.state.msgList.map(value =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//console.log(value);\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<MsgBox data={value}>\n\t\t\t\t\t\t\t\t</MsgBox>\n\n\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\n\n\t\t\t\t\t</Div>\n\t\t\t\t</Group>\n*/\n}\n\n\t\t\t\t{(this.state.scroller == true) ? <Scroller scroller={scroll} onClick={() => {this.setState({scroller: false})}}/> : ''}\n\n\t\t\t\t<div className='historyGroup'>\n\t\t\t\t{(this.state.msgList.length === 0) ? <PanelSpinner /> :\n\t\t\t\t\tthis.state.msgList.map((value, index) =>\n\t\t\t\t\t{\n\t\t\t\t\t\t//console.log(index + ' of ' + this.state.msgList.length);\n\t\t\t\t\t\t/*if (index === this.state.msgList.length-1) {\n\t\t\t\t\t\t\tconsole.log(1);  // in this time we printing last msg\n\t\t\t\t\t\t}*/\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<MsgBox\n\t\t\t\t\t\t\t\tdata={value}\n\t\t\t\t\t\t\t\towner={this.state.fetchedUser.data.uname}\n\t\t\t\t\t\t\t\tkey={'msg-' + index}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</MsgBox>\n\n\n\t\t\t\t\t\t);\n\n\t\t\t\t\t})\n\n\t\t\t\t}\n\n\t\t\t\t</div>\n\n\t\t\t\t{/*Footer*/}\n\n\t\t\t\t<Group className='inputRow'>\n\t\t\t\t\t<Div style={{display: 'flex'}} className='minimalDiv'>\n\t\t\t\t\t\t<Input placeholder=\"Сообщение\"\n\t\t\t\t\t\t\t   className='msgInput'\n\t\t\t\t\t\t\t   getRef={this.textInput}\n\t\t\t\t\t\t\t   onKeyDown={(value) => {if (value.key == \"Enter\") {this.sendMsg();}}}\n\t\t\t\t\t\t\t   status={(this.state.err == null) ? 'valid' : 'error'}\n\t\t\t\t\t\t\t   top={(this.state.err == null)? null : this.state.err}\n\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"xl\"\n\t\t\t\t\t\t\tlevel=\"1\"\n\t\t\t\t\t\t\tclassName='msgBtn'\n\t\t\t\t\t\t\tonClick={() => {this.sendMsg()}}>\n\t\t\t\t\t\t\tОтпр.\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Div>\n\t\t\t\t</Group>\n\n\n\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n/*\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tref={this.textInput} />\n\n\t\t\t\t<input\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tvalue=\"Фокус на текстовом поле\"\n\t\t\t\t\tonClick={this.focusTextInput}\n\t\t\t\t/>\n\t\t\t</div>\n */\n\nexport default Chat;\n","import React from 'react';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport './Home.css';\nimport FormLayoutGroup from \"@vkontakte/vkui/dist/components/FormLayoutGroup/FormLayoutGroup\";\nimport Input from \"@vkontakte/vkui/dist/components/Input/Input\";\nimport FormLayout from \"@vkontakte/vkui/dist/components/FormLayout/FormLayout\";\n\n\nconst Login = ({ id, logDataName, logDataPass, tryLogin, errMsg}) => (\n\t<Panel id={id}>\n\t\t<PanelHeader className=\"Panel\">Регистрация</PanelHeader>\n\n\t\t<FormLayout>\n\n\t\t\t<FormLayoutGroup top=\"Введите данные\">\n                <Input placeholder=\"Ваш псевдоним\" id='name' getRef={logDataName}\n\t\t\t\t/>\n                <Input placeholder=\"Ваш пароль\" id='pass' getRef={logDataPass}\n\t\t\t\t/>\n\t\t\t</FormLayoutGroup>\n\n\t\t\t<Button size=\"xl\" level=\"2\" onClick={() => {console.log(logDataName.current.value);console.log(logDataPass.current.value); tryLogin();}}>\n\t\t\t\tВойти\n\t\t\t</Button>\n            <Div>\n                <b>{errMsg && errMsg}</b>\n            </Div>\n\n\t\t</FormLayout>\n\n\t</Panel>\n);\n\n\nexport default Login;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ModalRoot from '@vkontakte/vkui/dist/components/ModalRoot/ModalRoot';\nimport ModalPage from '@vkontakte/vkui/dist/components/ModalPage/ModalPage';\nimport FormLayout from '@vkontakte/vkui/dist/components/FormLayout/FormLayout';\nimport FormLayoutGroup from '@vkontakte/vkui/dist/components/FormLayoutGroup/FormLayoutGroup';\nimport Input from '@vkontakte/vkui/dist/components/Input/Input';\nimport ModalPageHeader from '@vkontakte/vkui/dist/components/ModalPageHeader/ModalPageHeader';\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport axios from 'axios';\n\nimport Home from './panels/Home';\nimport Chat from './panels/Persik';\nimport Login from './panels/Login';\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\nimport Cell from \"@vkontakte/vkui/dist/components/Cell/Cell\";\nimport Div from \"@vkontakte/vkui/dist/components/Div/Div\";\n\nlet mutex = {id: 2,\nfirst_name: \"Филипп Джанковски\",\nlast_name: \"\",\ntimezone: 7}\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [activeModalS, setActiveModal] = useState(null);\n\tconst [fetchedUser, setUser] = useState(mutex);\n\tconst [activeChat, selectChat] = useState(null);\n\tconst [loginErrMsg, setLEM] = useState(null);\n\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\t/* DATA STORE */\n\t//const [msgList, setMsgList] = useState([]);\n\n\n\tconsole.log(fetchedUser);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_dark';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\n\t\tasync function fetchData() {\n\n\t\t\tif(!document.body.attributes.scheme) {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = 'space_gray';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\n\t\t\tlet user = null;\n\t\t\tconsole.log(window.location.href);\n\t\t\tif (window.location.href[4] == ':') {\n\t\t\t\tuser = fetchedUser;\n\t\t\t\tconsole.log('Local version');\n\t\t\t} else {\n\t\t\t\tconsole.log('Global version');\n\t\t\t\tuser = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\t}\n\n\t\t\tsetUser(user);\n\n\t\t\tlet dataf = await axios.get(\"https://das.ict.nsc.ru:12000/reg/\" + user.id + ':0:secret').then((res) => {\n\t\t\t\tif (res.data.status == 'ok'){\n\t\t\t\t\tuser.data = res.data.response;\n\t\t\t\t} else {\n\t\t\t\t\tsetActivePanel('login');\n\t\t\t\t}\n\t\t\t});\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\t//var logData = {name: null, pass: null};\n\tvar logDataName = React.createRef();\n\tvar logDataPass = React.createRef();\n\n\tasync function tryLogin() {\n\t\tlet user = fetchedUser;\n\t\tsetPopout(<ScreenSpinner size='large' />);\n\t\tif (logDataName.current.value.length < 1 || logDataPass.current.value.length < 1) {\n\t\t\tsetLEM('Введите все данные');\n\t\t\tsetPopout(null);\n\t\t\treturn false;\n\t\t}\n\t\tlet dataf = await axios.get(\"https://das.ict.nsc.ru:12000/reg/\" + user.id + ':' + logDataName.current.value + ':' + logDataPass.current.value).then((res) => {\n\t\t\tif (res.data.status == 'ok'){\n\t\t\t\tuser.data = res.data.response;\n\t\t\t\tsetActivePanel('home');\n\t\t\t} else {\n\t\t\t\tconsole.log('Auth Error: ' + res.data.desc);\n\t\t\t\t/*\n\t\t\t\t\"401\", \"desc\": \"already registered, use correct data\"\n\t\t\t\t\"306\", \"desc\": \"uname is required to be defined only in [A-Za-z0-9\\_\\-\\.]\"\n\t\t\t\t\"302\", \"desc\": \"uname or key isn\\'t correct key = (len > 4), uname = (len > 4) \"\n\t\t\t\t */\n\t\t\t\tswitch (res.data.code) {\n\t\t\t\t\tcase '401':\n\t\t\t\t\t\tsetLEM('Вы уже зарегистрированы');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '306':\n\t\t\t\t\t\tsetLEM('Никнейм должен быть среди [A-Za-z0-9\\\\_\\\\-\\\\.]');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '302':\n\t\t\t\t\t\tsetLEM('Длина никнейма и пароля должна быть более 4');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tsetLEM('Неизвестная ошибка');\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t//setLEM(res.data.desc);\n\t\t\t\t//setActivePanel('home');\n\t\t\t}\n\t\t});\n\t\tsetUser(user);\n\t\tsetPopout(null);\n\t}\n\n\n\tconst modal = (\n\t\t<ModalRoot activeModal={activeModalS}>\n\t\t\t<ModalPage\n\t\t\t\tid={'register'}\n\n\t\t\t\theader={\n\t\t\t\t\t<ModalPageHeader>\n\t\t\t\t\t\tРегистрация\n\t\t\t\t\t</ModalPageHeader>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<FormLayout>\n\n\t\t\t\t</FormLayout>\n\t\t\t</ModalPage>\n\t\t</ModalRoot>\n\t);\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout} modal={modal}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} setActiveModal={setActiveModal} />\n\t\t\t<Chat id='chat' go={go} activeChat={activeChat} fetchedUser={fetchedUser} />\n\t\t\t<Login id='login' logDataName={logDataName} logDataPass={logDataPass} tryLogin={tryLogin} errMsg={loginErrMsg}/>\n\t\t</View>\n\t);\n\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}